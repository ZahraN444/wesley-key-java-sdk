/*
 * SwaggerPetstoreLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.swagger.petstore.authentication;

import io.apimatic.core.authentication.HeaderAuth;
import io.swagger.petstore.ApiHelper;
import java.util.Collections;

/**
 * Utility class for authorization and token management.
 */
public class HttpBasicManager extends HeaderAuth implements HttpBasicCredentials {

    /**
     * Private instance of the auth model containing the auth credentials.
     */
    private HttpBasicModel authModel;

    /**
     * Constructor.
     * @param authModel The data model instance for auth credentials.
     */
    public HttpBasicManager(HttpBasicModel authModel) {
        super(Collections.singletonMap("Authorization",
                ApiHelper.getBase64EncodedCredentials(
                        authModel.getUsername(),
                        authModel.getPasswprd())));
        this.authModel = authModel;
    }

    /**
     * String value for username.
     * @return username
     */
    public String getUsername() {
        return authModel.getUsername();
    }

    /**
     * String value for passwprd.
     * @return passwprd
     */
    public String getPasswprd() {
        return authModel.getPasswprd();
    }

    /**
     * Checks if provided credentials matched with existing ones.
     * @param username String value for credentials.
     * @param passwprd String value for credentials.
     * @return true if credentials matched.
     */
    public boolean equals(String username, String passwprd) {
        return username.equals(getUsername())
                && passwprd.equals(getPasswprd());
    }

    /**
     * Converts this HttpBasicManager into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HttpBasicManager [" + "username=" + getUsername() + ", passwprd=" + getPasswprd()
                + "]";
    }
    /**
    * Returns the error message if the auth credentials are not valid.
    * @return the auth specific error message.
    */
    @Override
    public String getErrorMessage() {
        String errorMessage = super.getErrorMessage();
        if (errorMessage == null) {
            return null;
        }

        return "HttpBasic - " + errorMessage;
    }

}
