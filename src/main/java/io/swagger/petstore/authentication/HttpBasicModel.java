/*
 * SwaggerPetstoreLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.swagger.petstore.authentication;

/**
 * A data class for Basic Authentication credentials.
 */
public class HttpBasicModel {
    private String username;
    private String passwprd;

    /**
     * A Constructor for HttpBasicModel.
     */
    private HttpBasicModel(String username, String passwprd) {
        this.username = username;
        this.passwprd = passwprd;
    }

    /**
     * Getter for username.
     * @return username The value of username.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Getter for passwprd.
     * @return passwprd The value of passwprd.
     */
    public String getPasswprd() {
        return this.passwprd;
    }

    /**
     * Builds a new {@link HttpBasicModel.Builder} object.
     * Creates the instance with the state of the current auth model.
     * @return a new {@link HttpBasicModel.Builder} object.
     */
    public Builder toBuilder() {
        return new Builder(getUsername(), getPasswprd());
    }

    /**
     * A Builder class for Basic Authentication credentials.
     */
    public static class Builder {
        private String username;
        private String passwprd;

        /**
         * The constructor with required auth credentials.
         * @param username The value of Username.
         * @param passwprd The value of Passwprd.
         */
        public Builder(String username, String passwprd) {
            if (username == null) {
                throw new NullPointerException("Username cannot be null.");
            }

            if (passwprd == null) {
                throw new NullPointerException("Passwprd cannot be null.");
            }

            this.username = username;
            this.passwprd = passwprd;
        }

        /**
         * Setter for username.
         * @param username The value of username.
         * @return Builder The current instance of Builder.
         */
        public Builder username(String username) {
            if (username == null) {
                throw new NullPointerException("Username cannot be null.");
            }

            this.username = username;
            return this;
        }

        /**
         * Setter for passwprd.
         * @param passwprd The value of passwprd.
         * @return Builder The current instance of Builder.
         */
        public Builder passwprd(String passwprd) {
            if (passwprd == null) {
                throw new NullPointerException("Passwprd cannot be null.");
            }

            this.passwprd = passwprd;
            return this;
        }

        /**
         * Builds the instance of HttpBasicModel using the provided credentials.
         * @return The instance of HttpBasicModel.
         */
        public HttpBasicModel build() {
            return new HttpBasicModel(username, passwprd);
        }
    }
}