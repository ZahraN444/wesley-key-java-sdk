/*
 * CypressTestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Message2 type.
 */
public class Message2 {
    private Integer code;
    private String text;

    /**
     * Default constructor.
     */
    public Message2() {
    }

    /**
     * Initialization constructor.
     * @param  code  Integer value for code.
     * @param  text  String value for text.
     */
    public Message2(
            Integer code,
            String text) {
        this.code = code;
        this.text = text;
    }

    /**
     * Getter for Code.
     * @return Returns the Integer
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for Integer
     */
    @JsonSetter("code")
    public void setCode(Integer code) {
        this.code = code;
    }

    /**
     * Getter for Text.
     * @return Returns the String
     */
    @JsonGetter("text")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getText() {
        return text;
    }

    /**
     * Setter for Text.
     * @param text Value for String
     */
    @JsonSetter("text")
    public void setText(String text) {
        this.text = text;
    }

    /**
     * Converts this Message2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Message2 [" + "code=" + code + ", text=" + text + "]";
    }

    /**
     * Builds a new {@link Message2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Message2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .code(getCode())
                .text(getText());
        return builder;
    }

    /**
     * Class to build instances of {@link Message2}.
     */
    public static class Builder {
        private Integer code;
        private String text;



        /**
         * Setter for code.
         * @param  code  Integer value for code.
         * @return Builder
         */
        public Builder code(Integer code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for text.
         * @param  text  String value for text.
         * @return Builder
         */
        public Builder text(String text) {
            this.text = text;
            return this;
        }

        /**
         * Builds a new {@link Message2} object using the set fields.
         * @return {@link Message2}
         */
        public Message2 build() {
            return new Message2(code, text);
        }
    }
}
