/*
 * CypressTestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ResponseHttp404 type.
 */
public class ResponseHttp404 {
    private String id;

    /**
     * Default constructor.
     */
    public ResponseHttp404() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     */
    public ResponseHttp404(
            String id) {
        this.id = id;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Converts this ResponseHttp404 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ResponseHttp404 [" + "id=" + id + "]";
    }

    /**
     * Builds a new {@link ResponseHttp404.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ResponseHttp404.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId());
        return builder;
    }

    /**
     * Class to build instances of {@link ResponseHttp404}.
     */
    public static class Builder {
        private String id;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Builds a new {@link ResponseHttp404} object using the set fields.
         * @return {@link ResponseHttp404}
         */
        public ResponseHttp404 build() {
            return new ResponseHttp404(id);
        }
    }
}
